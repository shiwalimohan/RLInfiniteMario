
sp {rl*mario*rl*1584
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2922180028809383)
}


sp {rl*mario*rl*1583
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1582
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1581
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1580
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1579
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1578
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1577
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1576
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1575
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1574
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1573
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1572
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.4819640837634737)
}


sp {rl*mario*rl*1571
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1570
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1569
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1568
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1567
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0.04314768004610279)
}


sp {rl*mario*rl*1566
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 2 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1565
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 2 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.07929945620957717)
}


sp {rl*mario*rl*1564
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 2 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1563
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 2 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1562
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 2 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1561
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 2 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1560
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.01199999986588955)
}


sp {rl*mario*rl*1559
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1558
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1557
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6372412353537388)
}


sp {rl*mario*rl*1556
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1555
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1554
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.4070195711409837)
}


sp {rl*mario*rl*1553
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1552
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1551
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.3029999999329447)
}


sp {rl*mario*rl*1550
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1549
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1548
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1547
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1546
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1545
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.3073511757385577)
}


sp {rl*mario*rl*1544
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1543
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1542
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1541
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1540
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1539
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.008083711146240758)
}


sp {rl*mario*rl*1538
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1537
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1536
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.155281869181648)
}


sp {rl*mario*rl*1535
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1534
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1533
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1532
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1531
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1530
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1529
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1528
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1527
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.1471540785473537)
}


sp {rl*mario*rl*1526
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1525
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1524
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.1426399313206977)
}


sp {rl*mario*rl*1523
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1522
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.1291146001022018)
}


sp {rl*mario*rl*1521
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1520
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1519
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1518
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.979991335901738)
}


sp {rl*mario*rl*1517
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1516
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1515
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1514
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1513
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1512
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1511
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1510
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1509
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1508
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.006253015833055264)
}


sp {rl*mario*rl*1507
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1506
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.9804496707140744)
}


sp {rl*mario*rl*1505
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1504
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1503
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1502
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1501
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1500
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1499
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1498
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1497
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.047472034050554)
}


sp {rl*mario*rl*1496
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1495
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1494
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1493
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1492
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1491
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.816691013149522)
}


sp {rl*mario*rl*1490
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1489
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1488
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 1.237101687813003)
}


sp {rl*mario*rl*1487
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1486
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1485
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1484
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1483
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1482
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1481
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1480
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1479
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1478
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1477
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1476
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1475
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1474
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1473
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1472
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1471
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1470
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1469
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1468
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1467
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1466
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1465
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1464
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.007781999913029358)
}


sp {rl*mario*rl*1463
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1462
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1461
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1460
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1459
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1458
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.7071837958734586)
}


sp {rl*mario*rl*1457
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1456
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1455
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1454
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1453
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1452
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.881117508834945)
}


sp {rl*mario*rl*1451
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1450
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1449
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1448
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1447
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1446
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1445
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.04846229907623458)
}


sp {rl*mario*rl*1444
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1443
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1442
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.0687117527075697)
}


sp {rl*mario*rl*1441
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1440
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -7 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1439
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -7 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1438
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -7 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1437
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -7 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 1.042620576681142)
}


sp {rl*mario*rl*1436
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -7 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1435
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -7 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1434
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1433
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1432
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1431
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1430
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1429
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1428
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1427
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1426
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1425
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1424
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0.1255576748954979)
}


sp {rl*mario*rl*1423
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1422
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.01196999986656012)
}


sp {rl*mario*rl*1421
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2940000000670552)
}


sp {rl*mario*rl*1420
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1419
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.257530131214379)
}


sp {rl*mario*rl*1418
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1417
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.8605593931746944)
}


sp {rl*mario*rl*1416
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.738844861499917)
}


sp {rl*mario*rl*1415
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1414
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1413
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1412
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1411
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1410
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.01196999986656012)
}


sp {rl*mario*rl*1409
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1408
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1407
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1406
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1405
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1404
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.01019999988600613)
}


sp {rl*mario*rl*1403
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1402
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1401
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2670990012119395)
}


sp {rl*mario*rl*1400
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1399
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1398
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0.970565753083486)
}


sp {rl*mario*rl*1397
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1396
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1395
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1394
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1393
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1392
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1391
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1390
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1389
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0.8895806478831778)
}


sp {rl*mario*rl*1388
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1387
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1386
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -4 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1385
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -4 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1384
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -4 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1383
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -4 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1382
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -4 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1381
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -4 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1380
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1379
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1378
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1377
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1376
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1375
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1374
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0.1998000020697713)
}


sp {rl*mario*rl*1373
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1372
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1371
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1370
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1369
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -1 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1368
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.560196364927836)
}


sp {rl*mario*rl*1367
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1366
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1365
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1364
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1363
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.284776974708792)
}


sp {rl*mario*rl*1362
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.3995217235307654)
}


sp {rl*mario*rl*1361
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1360
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1359
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.389074509848303)
}


sp {rl*mario*rl*1358
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1357
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1356
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1355
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1354
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1353
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1352
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1351
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1350
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1349
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1348
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1347
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 1.559288817804454)
}


sp {rl*mario*rl*1346
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1345
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1344
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1343
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1342
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1341
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1340
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1339
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0.2940000000670552)
}


sp {rl*mario*rl*1338
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.3029999999329447)
}


sp {rl*mario*rl*1337
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1336
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1335
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0.04534225006513441)
}


sp {rl*mario*rl*1334
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1333
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1332
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -3 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0.288018002927877)
}


sp {rl*mario*rl*1331
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -3 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1330
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -3 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1329
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -3 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.01019999988600613)
}


sp {rl*mario*rl*1328
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -3 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1327
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -3 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1326
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1325
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1324
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1323
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = -0.007781999913029358)
}


sp {rl*mario*rl*1322
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1321
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -2 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1320
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x 0 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0.294000002861023)
}


sp {rl*mario*rl*1319
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x 0 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1318
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x 0 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1317
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x 0 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1316
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x 0 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1315
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x 0 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1314
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 2 ^x 0 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1313
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 2 ^x 0 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0.2940000000670552)
}


sp {rl*mario*rl*1312
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 2 ^x 0 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1311
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 2 ^x 0 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0.221178002365619)
}


sp {rl*mario*rl*1310
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 2 ^x 0 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1309
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 2 ^x 0 ^type |Fire Flower|)
    -->
    (<s1> ^operator <o1> = 0.2940000000670552)
}


sp {rl*mario*rl*1308
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2776734147941058)
}


sp {rl*mario*rl*1307
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1306
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1305
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.002999999966472388)
}


sp {rl*mario*rl*1304
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1303
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1302
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2776734147941058)
}


sp {rl*mario*rl*1301
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1300
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1299
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.3326922012782157)
}


sp {rl*mario*rl*1298
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1297
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1296
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1295
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1294
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1293
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.294000002861023)
}


sp {rl*mario*rl*1292
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1291
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1290
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.7350648887010145)
}


sp {rl*mario*rl*1289
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1288
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1287
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.3029999999329447)
}


sp {rl*mario*rl*1286
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.5097550110757085)
}


sp {rl*mario*rl*1285
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1284
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1283
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1282
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1281
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1280
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.03002780358637931)
}


sp {rl*mario*rl*1279
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1278
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1277
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1276
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1275
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.5218424904506267)
}


sp {rl*mario*rl*1274
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1273
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1272
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1271
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1270
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.3768294616418637)
}


sp {rl*mario*rl*1269
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1268
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.01760190282678427)
}


sp {rl*mario*rl*1267
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1266
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1265
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1264
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1263
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1262
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.004958729642029369)
}


sp {rl*mario*rl*1261
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.007977917212547214)
}


sp {rl*mario*rl*1260
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1259
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1258
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1257
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1256
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.009340806987441575)
}


sp {rl*mario*rl*1255
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1254
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1253
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1252
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1251
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1250
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.008133049183666996)
}


sp {rl*mario*rl*1249
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.127427488264409)
}


sp {rl*mario*rl*1248
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.366204301150275)
}


sp {rl*mario*rl*1247
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1246
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1245
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2226030673068127)
}


sp {rl*mario*rl*1244
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1243
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1242
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1241
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1240
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1239
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.4611167567530865)
}


sp {rl*mario*rl*1238
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1237
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1236
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.4913546944707186)
}


sp {rl*mario*rl*1235
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1234
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1233
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1232
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1231
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1230
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1229
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.173942463453844)
}


sp {rl*mario*rl*1228
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1227
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 4.492952355935526)
}


sp {rl*mario*rl*1226
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1225
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1224
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.3071999998860061)
}


sp {rl*mario*rl*1223
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1222
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1221
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.8974062640619227)
}


sp {rl*mario*rl*1220
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1219
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1218
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1217
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.7073662861494745)
}


sp {rl*mario*rl*1216
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.4519511739576151)
}


sp {rl*mario*rl*1215
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.864845085751718)
}


sp {rl*mario*rl*1214
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1213
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.041578547161729)
}


sp {rl*mario*rl*1212
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1211
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1210
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1209
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.961294402644072)
}


sp {rl*mario*rl*1208
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1207
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1206
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.170822384767096)
}


sp {rl*mario*rl*1205
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.8703671651196961)
}


sp {rl*mario*rl*1204
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1203
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1202
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1201
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1200
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1199
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1198
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1197
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.514406159803892)
}


sp {rl*mario*rl*1196
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2940000000670552)
}


sp {rl*mario*rl*1195
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1194
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1193
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1192
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1191
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.090153653428845)
}


sp {rl*mario*rl*1190
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.19364414603613)
}


sp {rl*mario*rl*1189
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1188
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.7906771622485869)
}


sp {rl*mario*rl*1187
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1186
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1185
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1184
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1183
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1182
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.708555870935107)
}


sp {rl*mario*rl*1181
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1180
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1179
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1178
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1177
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1176
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.738117387618282)
}


sp {rl*mario*rl*1175
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1174
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1173
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1172
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1171
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1170
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.051493670568497)
}


sp {rl*mario*rl*1169
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1168
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1167
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1166
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1165
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1164
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.7538989770199795)
}


sp {rl*mario*rl*1163
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.049250510920487)
}


sp {rl*mario*rl*1162
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1161
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1160
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1159
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 4.386371397829547)
}


sp {rl*mario*rl*1158
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.3943300176637327)
}


sp {rl*mario*rl*1157
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1156
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1155
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1154
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1153
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1152
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2237675320310596)
}


sp {rl*mario*rl*1151
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2138900700819098)
}


sp {rl*mario*rl*1150
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1149
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1148
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.222094088197726)
}


sp {rl*mario*rl*1147
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1146
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.4303581430740021)
}


sp {rl*mario*rl*1145
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1144
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.1841655639278972)
}


sp {rl*mario*rl*1143
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.03362003524019752)
}


sp {rl*mario*rl*1142
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2829364314805908)
}


sp {rl*mario*rl*1141
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1140
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1139
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1138
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.2106735833883245)
}


sp {rl*mario*rl*1137
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.03261992609944486)
}


sp {rl*mario*rl*1136
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1135
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1134
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1133
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1132
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1131
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.1641615833175041)
}


sp {rl*mario*rl*1130
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1129
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1128
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1127
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1126
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1125
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.818064236350591)
}


sp {rl*mario*rl*1124
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1123
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1122
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.352279069822456)
}


sp {rl*mario*rl*1121
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1120
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1119
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 6.414419179446658)
}


sp {rl*mario*rl*1118
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.266941968342202)
}


sp {rl*mario*rl*1117
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1116
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1115
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1114
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1113
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.714468548346532)
}


sp {rl*mario*rl*1112
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1111
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1110
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1109
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2940000000670552)
}


sp {rl*mario*rl*1108
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1107
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.601849421949567)
}


sp {rl*mario*rl*1106
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1105
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.3476658149877494)
}


sp {rl*mario*rl*1104
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1103
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1102
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1101
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.757341758690356)
}


sp {rl*mario*rl*1100
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1099
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1098
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.3029999999329447)
}


sp {rl*mario*rl*1097
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1096
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.05211136475134226)
}


sp {rl*mario*rl*1095
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.438647809460808)
}


sp {rl*mario*rl*1094
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1093
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1092
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.901059829254714)
}


sp {rl*mario*rl*1091
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1090
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1089
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.2352972941714181)
}


sp {rl*mario*rl*1088
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1087
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1086
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.659689964554241)
}


sp {rl*mario*rl*1085
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1084
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1083
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1082
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1081
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1080
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1079
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.5238391315158347)
}


sp {rl*mario*rl*1078
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1077
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.02643546126593633)
}


sp {rl*mario*rl*1076
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.009124119327742307)
}


sp {rl*mario*rl*1075
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1074
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.7094536816814897)
}


sp {rl*mario*rl*1073
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1072
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1071
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.265100398573499)
}


sp {rl*mario*rl*1070
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1069
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1068
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 4.354042596343058)
}


sp {rl*mario*rl*1067
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1066
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1065
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1064
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1063
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1062
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1061
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.4954317690065893)
}


sp {rl*mario*rl*1060
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1059
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.3873144404523602)
}


sp {rl*mario*rl*1058
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1057
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1056
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.430278204173048)
}


sp {rl*mario*rl*1055
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.5946367911116217)
}


sp {rl*mario*rl*1054
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.4510450803328938)
}


sp {rl*mario*rl*1053
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.05884493026462464)
}


sp {rl*mario*rl*1052
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.167755608711238)
}


sp {rl*mario*rl*1051
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2940000000670552)
}


sp {rl*mario*rl*1050
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.576284007763056)
}


sp {rl*mario*rl*1049
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1048
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1047
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1046
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.6427463728770989)
}


sp {rl*mario*rl*1045
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1044
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1043
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1042
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1041
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.5104116706769949)
}


sp {rl*mario*rl*1040
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1039
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1038
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1037
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1036
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1035
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.772718669367856)
}


sp {rl*mario*rl*1034
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1033
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1032
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.592576049888696)
}


sp {rl*mario*rl*1031
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2883754191609265)
}


sp {rl*mario*rl*1030
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1029
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2958982767947752)
}


sp {rl*mario*rl*1028
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8120045639485237)
}


sp {rl*mario*rl*1027
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.3247391275925959)
}


sp {rl*mario*rl*1026
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.01019999988600613)
}


sp {rl*mario*rl*1025
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2922180000869706)
}


sp {rl*mario*rl*1024
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1023
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.3029999999329447)
}


sp {rl*mario*rl*1022
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1021
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1020
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 6.172325977162142)
}


sp {rl*mario*rl*1019
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1018
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1017
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.433498922003297)
}


sp {rl*mario*rl*1016
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1015
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1014
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1013
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1012
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1011
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*1010
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1009
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1008
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8727543874462433)
}


sp {rl*mario*rl*1007
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1006
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1005
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1004
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1003
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1002
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.08019259120460498)
}


sp {rl*mario*rl*1001
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*1000
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.352322084045063)
}


sp {rl*mario*rl*999
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.6397422499085563)
}


sp {rl*mario*rl*998
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2880300001334399)
}


sp {rl*mario*rl*997
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x 0 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2940000000670552)
}


sp {rl*mario*rl*996
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*995
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*994
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*993
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.23073326039063)
}


sp {rl*mario*rl*992
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*991
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.06100170689122288)
}


sp {rl*mario*rl*990
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -1.596575254607306)
}


sp {rl*mario*rl*989
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.132411481486717)
}


sp {rl*mario*rl*988
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.4326188997259325)
}


sp {rl*mario*rl*987
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -1.373989086187322)
}


sp {rl*mario*rl*986
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.5365000163876552)
}


sp {rl*mario*rl*985
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*984
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.1085646470078243)
}


sp {rl*mario*rl*983
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*982
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*981
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.455231212841278)
}


sp {rl*mario*rl*980
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*979
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*978
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*977
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*976
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*975
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.420967107351642)
}


sp {rl*mario*rl*974
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*973
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*972
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 6.309156512761372)
}


sp {rl*mario*rl*971
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*970
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*969
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*968
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*967
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*966
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.629524330701997)
}


sp {rl*mario*rl*965
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*964
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*963
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*962
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*961
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*960
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.56391982556215)
}


sp {rl*mario*rl*959
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*958
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.02662502355825491)
}


sp {rl*mario*rl*957
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.2680962077467783)
}


sp {rl*mario*rl*956
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*955
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*954
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.1932162135468546)
}


sp {rl*mario*rl*953
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.5793259053750878)
}


sp {rl*mario*rl*952
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.05242017964934)
}


sp {rl*mario*rl*951
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.520707149630978)
}


sp {rl*mario*rl*950
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.8565509435363656)
}


sp {rl*mario*rl*949
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.048382265203106)
}


sp {rl*mario*rl*948
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.5672142573275426)
}


sp {rl*mario*rl*947
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.336698937882721)
}


sp {rl*mario*rl*946
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.9361273827771455)
}


sp {rl*mario*rl*945
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.79061438937557)
}


sp {rl*mario*rl*944
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.453338050090253)
}


sp {rl*mario*rl*943
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.9786723966541151)
}


sp {rl*mario*rl*942
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.3569837875915798)
}


sp {rl*mario*rl*941
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.7317849458114329)
}


sp {rl*mario*rl*940
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*939
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*938
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*937
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*936
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.4691381126298417)
}


sp {rl*mario*rl*935
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*934
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*933
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*932
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*931
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*930
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.693411429257211)
}


sp {rl*mario*rl*929
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*928
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*927
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*926
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*925
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*924
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*923
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*922
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*921
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.812491832119083)
}


sp {rl*mario*rl*920
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*919
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.346542306117189)
}


sp {rl*mario*rl*918
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.88368964156634)
}


sp {rl*mario*rl*917
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.701424516837406)
}


sp {rl*mario*rl*916
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.78658701724268)
}


sp {rl*mario*rl*915
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.355218158964152)
}


sp {rl*mario*rl*914
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.915180757350992)
}


sp {rl*mario*rl*913
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.7032901275344966)
}


sp {rl*mario*rl*912
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.059250429491965)
}


sp {rl*mario*rl*911
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*910
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.1657470030002304)
}


sp {rl*mario*rl*909
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.8456895835382292)
}


sp {rl*mario*rl*908
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*907
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.1934358880225445)
}


sp {rl*mario*rl*906
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.385961494760382)
}


sp {rl*mario*rl*905
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*904
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*903
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*902
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*901
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9432764967964171)
}


sp {rl*mario*rl*900
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.4971946377625233)
}


sp {rl*mario*rl*899
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.790768570535351)
}


sp {rl*mario*rl*898
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.225828372752285)
}


sp {rl*mario*rl*897
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.07724449127223831)
}


sp {rl*mario*rl*896
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.16899304726923)
}


sp {rl*mario*rl*895
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.683161186947649)
}


sp {rl*mario*rl*894
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.02185403036190439)
}


sp {rl*mario*rl*893
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.874149577293116)
}


sp {rl*mario*rl*892
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.1311306768689929)
}


sp {rl*mario*rl*891
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.653627709590702)
}


sp {rl*mario*rl*890
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.413119920023016)
}


sp {rl*mario*rl*889
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.118936082660342)
}


sp {rl*mario*rl*888
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*887
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*886
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*885
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.792518305979501)
}


sp {rl*mario*rl*884
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*883
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*882
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.22021891680156)
}


sp {rl*mario*rl*881
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*880
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*879
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2182933668828281)
}


sp {rl*mario*rl*878
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*877
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8144917279751017)
}


sp {rl*mario*rl*876
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.686008414766386)
}


sp {rl*mario*rl*875
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.7458952001867191)
}


sp {rl*mario*rl*874
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*873
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*872
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*871
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*870
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*869
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*868
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*867
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 6.278907136297208)
}


sp {rl*mario*rl*866
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*865
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.007153284688828)
}


sp {rl*mario*rl*864
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 5.772147156048358)
}


sp {rl*mario*rl*863
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*862
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*861
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*860
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.633199552835944)
}


sp {rl*mario*rl*859
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*858
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.2870659899702938)
}


sp {rl*mario*rl*857
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*856
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.339457030980703)
}


sp {rl*mario*rl*855
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.613290360038365)
}


sp {rl*mario*rl*854
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*853
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.6913660999056088)
}


sp {rl*mario*rl*852
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.394793573632662)
}


sp {rl*mario*rl*851
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2776440032487934)
}


sp {rl*mario*rl*850
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.5902312578865736)
}


sp {rl*mario*rl*849
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.1376192424464271)
}


sp {rl*mario*rl*848
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*847
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*846
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -1.284243064449627)
}


sp {rl*mario*rl*845
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.936574956703573)
}


sp {rl*mario*rl*844
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.3429235899036722)
}


sp {rl*mario*rl*843
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -1.049889189366891)
}


sp {rl*mario*rl*842
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*841
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.7991624209691292)
}


sp {rl*mario*rl*840
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -1.420270991775615)
}


sp {rl*mario*rl*839
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2362173717914088)
}


sp {rl*mario*rl*838
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.252302077260244)
}


sp {rl*mario*rl*837
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.172052385504713)
}


sp {rl*mario*rl*836
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.474226446486339)
}


sp {rl*mario*rl*835
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.4707035837994582)
}


sp {rl*mario*rl*834
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*833
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.5623280249181837)
}


sp {rl*mario*rl*832
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*831
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 4.136081862063686)
}


sp {rl*mario*rl*830
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*829
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*828
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*827
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*826
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*825
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.157292035312599)
}


sp {rl*mario*rl*824
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*823
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*822
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.4074800313029361)
}


sp {rl*mario*rl*821
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.357040988168279)
}


sp {rl*mario*rl*820
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*819
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.584398293277013)
}


sp {rl*mario*rl*818
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.682438309643256)
}


sp {rl*mario*rl*817
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.115689843398877)
}


sp {rl*mario*rl*816
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.562639226635681)
}


sp {rl*mario*rl*815
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.1414839647946507)
}


sp {rl*mario*rl*814
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*813
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.029910646534246)
}


sp {rl*mario*rl*812
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*811
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*810
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.114227773959932)
}


sp {rl*mario*rl*809
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*808
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*807
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.957178501803686)
}


sp {rl*mario*rl*806
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*805
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*804
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.069186447615882)
}


sp {rl*mario*rl*803
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.002999999932944775)
}


sp {rl*mario*rl*802
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*801
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*800
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*799
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*798
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.582751039201123)
}


sp {rl*mario*rl*797
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.4129336215516088)
}


sp {rl*mario*rl*796
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.3081595190157267)
}


sp {rl*mario*rl*795
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.2097920773945851)
}


sp {rl*mario*rl*794
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.4671793925468204)
}


sp {rl*mario*rl*793
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.301539111626751)
}


sp {rl*mario*rl*792
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.06725964078644)
}


sp {rl*mario*rl*791
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 5.357853301065536)
}


sp {rl*mario*rl*790
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.09143169476051373)
}


sp {rl*mario*rl*789
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*788
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*787
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8856515035788648)
}


sp {rl*mario*rl*786
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 5.416271008868934)
}


sp {rl*mario*rl*785
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*784
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*783
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*782
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*781
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*780
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.873660364189259)
}


sp {rl*mario*rl*779
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.288050678509177)
}


sp {rl*mario*rl*778
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*777
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 4.632464724217193)
}


sp {rl*mario*rl*776
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.8506733382413628)
}


sp {rl*mario*rl*775
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*774
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.214117413837729)
}


sp {rl*mario*rl*773
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.35099218003974)
}


sp {rl*mario*rl*772
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*771
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.2371569633836217)
}


sp {rl*mario*rl*770
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*769
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.194971450290937)
}


sp {rl*mario*rl*768
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.5052986193104457)
}


sp {rl*mario*rl*767
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.3419457188981849)
}


sp {rl*mario*rl*766
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.250137408755128)
}


sp {rl*mario*rl*765
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.321099962135801)
}


sp {rl*mario*rl*764
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*763
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2904413461068263)
}


sp {rl*mario*rl*762
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.628076275943106)
}


sp {rl*mario*rl*761
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.690652272654086)
}


sp {rl*mario*rl*760
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.467075154857128)
}


sp {rl*mario*rl*759
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.485601461323251)
}


sp {rl*mario*rl*758
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.180100739062975)
}


sp {rl*mario*rl*757
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.034715343012125)
}


sp {rl*mario*rl*756
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.156294361235764)
}


sp {rl*mario*rl*755
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*754
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*753
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.5988036878732823)
}


sp {rl*mario*rl*752
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*751
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*750
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*749
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*748
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*747
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.294000002861023)
}


sp {rl*mario*rl*746
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*745
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*744
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.03555595478729384)
}


sp {rl*mario*rl*743
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.8553364553809444)
}


sp {rl*mario*rl*742
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.7114591893426243)
}


sp {rl*mario*rl*741
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.875992421291656)
}


sp {rl*mario*rl*740
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.8063546257662216)
}


sp {rl*mario*rl*739
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*738
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.014348103814834)
}


sp {rl*mario*rl*737
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*736
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.6998082583815067)
}


sp {rl*mario*rl*735
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.0143222953495294)
}


sp {rl*mario*rl*734
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.7377530216515917)
}


sp {rl*mario*rl*733
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*732
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.2504501986013811)
}


sp {rl*mario*rl*731
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*730
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.8992908926313757)
}


sp {rl*mario*rl*729
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.5867711951325709)
}


sp {rl*mario*rl*728
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.6515386286520586)
}


sp {rl*mario*rl*727
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*726
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.908757429418221)
}


sp {rl*mario*rl*725
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2940000000670552)
}


sp {rl*mario*rl*724
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.884276493726809)
}


sp {rl*mario*rl*723
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.06484677288988265)
}


sp {rl*mario*rl*722
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8917198834083905)
}


sp {rl*mario*rl*721
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.7929607048209646)
}


sp {rl*mario*rl*720
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.837914211299299)
}


sp {rl*mario*rl*719
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*718
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*717
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.09932305822496262)
}


sp {rl*mario*rl*716
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*715
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*714
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*713
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9579105069553646)
}


sp {rl*mario*rl*712
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2940000000670552)
}


sp {rl*mario*rl*711
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.798622506755305)
}


sp {rl*mario*rl*710
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*709
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*708
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.948175097401621)
}


sp {rl*mario*rl*707
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*706
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8414619230108458)
}


sp {rl*mario*rl*705
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*704
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*703
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*702
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.481976201769114)
}


sp {rl*mario*rl*701
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.280312380555177)
}


sp {rl*mario*rl*700
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.893106980436395)
}


sp {rl*mario*rl*699
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.6184318050796884)
}


sp {rl*mario*rl*698
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9856506240978808)
}


sp {rl*mario*rl*697
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*696
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8393044831360164)
}


sp {rl*mario*rl*695
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.1616166711148374)
}


sp {rl*mario*rl*694
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.3930630727657963)
}


sp {rl*mario*rl*693
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.323004614386182)
}


sp {rl*mario*rl*692
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.4322989484500803)
}


sp {rl*mario*rl*691
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.06959433351150923)
}


sp {rl*mario*rl*690
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6573345944354114)
}


sp {rl*mario*rl*689
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8325618398300565)
}


sp {rl*mario*rl*688
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -1.173307162217688)
}


sp {rl*mario*rl*687
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.2012913205607492)
}


sp {rl*mario*rl*686
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.2072910800114797)
}


sp {rl*mario*rl*685
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2041608749865166)
}


sp {rl*mario*rl*684
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.6905596117114784)
}


sp {rl*mario*rl*683
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.8411307498633901)
}


sp {rl*mario*rl*682
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.10164205395411)
}


sp {rl*mario*rl*681
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.952130694549296)
}


sp {rl*mario*rl*680
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.474226446486339)
}


sp {rl*mario*rl*679
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.412770942185402)
}


sp {rl*mario*rl*678
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.3618862623341697)
}


sp {rl*mario*rl*677
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.372378347054318)
}


sp {rl*mario*rl*676
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2506749425413752)
}


sp {rl*mario*rl*675
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 4.014425144070206)
}


sp {rl*mario*rl*674
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.974559322026603)
}


sp {rl*mario*rl*673
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.599696060497943)
}


sp {rl*mario*rl*672
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.3549668187784601)
}


sp {rl*mario*rl*671
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.3875127954152151)
}


sp {rl*mario*rl*670
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.1421028593035732)
}


sp {rl*mario*rl*669
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.648517818072366)
}


sp {rl*mario*rl*668
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.989072043284512)
}


sp {rl*mario*rl*667
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.275451637005898)
}


sp {rl*mario*rl*666
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.184045970941612)
}


sp {rl*mario*rl*665
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.066990625152691)
}


sp {rl*mario*rl*664
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.201888682229602)
}


sp {rl*mario*rl*663
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.05928541460709996)
}


sp {rl*mario*rl*662
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.812166529760416)
}


sp {rl*mario*rl*661
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.7401387662497684)
}


sp {rl*mario*rl*660
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.292981800464034)
}


sp {rl*mario*rl*659
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*658
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*657
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.1514999999664724)
}


sp {rl*mario*rl*656
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*655
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*654
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*653
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*652
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*651
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 5.517931433698675)
}


sp {rl*mario*rl*650
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.037355432354279)
}


sp {rl*mario*rl*649
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*648
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.5938199910434391)
}


sp {rl*mario*rl*647
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.279271325330474)
}


sp {rl*mario*rl*646
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.1437116354117157)
}


sp {rl*mario*rl*645
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.220031650043468)
}


sp {rl*mario*rl*644
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.011476379488314)
}


sp {rl*mario*rl*643
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.203653523494238)
}


sp {rl*mario*rl*642
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.064615281003127)
}


sp {rl*mario*rl*641
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.146960690703025)
}


sp {rl*mario*rl*640
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.1924579329361523)
}


sp {rl*mario*rl*639
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.1886579000322819)
}


sp {rl*mario*rl*638
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*637
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*636
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.862389660686163)
}


sp {rl*mario*rl*635
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.065458411372599)
}


sp {rl*mario*rl*634
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*633
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.2199434221618503)
}


sp {rl*mario*rl*632
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.895119152378588)
}


sp {rl*mario*rl*631
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.6049016306940295)
}


sp {rl*mario*rl*630
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.378518948940923)
}


sp {rl*mario*rl*629
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 4.079064849809178)
}


sp {rl*mario*rl*628
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.06518207032062)
}


sp {rl*mario*rl*627
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.5540050932625691)
}


sp {rl*mario*rl*626
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.292523277704808)
}


sp {rl*mario*rl*625
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9397290997233473)
}


sp {rl*mario*rl*624
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9764035278236508)
}


sp {rl*mario*rl*623
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.336707790488628)
}


sp {rl*mario*rl*622
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8783925631530013)
}


sp {rl*mario*rl*621
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.960538662617297)
}


sp {rl*mario*rl*620
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.407463760646743)
}


sp {rl*mario*rl*619
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.024206562856207)
}


sp {rl*mario*rl*618
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.321541466966791)
}


sp {rl*mario*rl*617
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*616
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6284190544692838)
}


sp {rl*mario*rl*615
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*614
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*613
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*612
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.439929233473308)
}


sp {rl*mario*rl*611
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*610
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*609
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*608
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*607
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*606
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.671850688448841)
}


sp {rl*mario*rl*605
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.87985930074647)
}


sp {rl*mario*rl*604
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.4840512094855873)
}


sp {rl*mario*rl*603
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8255151337294222)
}


sp {rl*mario*rl*602
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.929896600695766)
}


sp {rl*mario*rl*601
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.314064964788187)
}


sp {rl*mario*rl*600
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.3770779621936425)
}


sp {rl*mario*rl*599
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.871096572759391)
}


sp {rl*mario*rl*598
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.1276590975974767)
}


sp {rl*mario*rl*597
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.307671400485065)
}


sp {rl*mario*rl*596
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*595
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*594
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.401893663489094)
}


sp {rl*mario*rl*593
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.89988569102095)
}


sp {rl*mario*rl*592
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.680340796853119)
}


sp {rl*mario*rl*591
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.875854834366037)
}


sp {rl*mario*rl*590
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*589
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.909813960423699)
}


sp {rl*mario*rl*588
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.05618859723928532)
}


sp {rl*mario*rl*587
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8911374810261521)
}


sp {rl*mario*rl*586
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.4554513651257417)
}


sp {rl*mario*rl*585
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.863666795745333)
}


sp {rl*mario*rl*584
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6990233504048923)
}


sp {rl*mario*rl*583
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.448628379407467)
}


sp {rl*mario*rl*582
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.56872702571891)
}


sp {rl*mario*rl*581
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*580
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*579
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.4421926725394874)
}


sp {rl*mario*rl*578
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.555545030764316)
}


sp {rl*mario*rl*577
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6606302910596672)
}


sp {rl*mario*rl*576
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.7219277579027625)
}


sp {rl*mario*rl*575
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9279063890912912)
}


sp {rl*mario*rl*574
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.396578661140066)
}


sp {rl*mario*rl*573
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.452909659477696)
}


sp {rl*mario*rl*572
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.303749542711942)
}


sp {rl*mario*rl*571
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.268287729400765)
}


sp {rl*mario*rl*570
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.527085605225645)
}


sp {rl*mario*rl*569
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.992940417762138)
}


sp {rl*mario*rl*568
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.507485639699252)
}


sp {rl*mario*rl*567
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.4899831615068719)
}


sp {rl*mario*rl*566
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.773888382887534)
}


sp {rl*mario*rl*565
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.392174353144815)
}


sp {rl*mario*rl*564
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*563
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.9696917541777469)
}


sp {rl*mario*rl*562
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.062668583668896)
}


sp {rl*mario*rl*561
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 4.195156572814243)
}


sp {rl*mario*rl*560
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*559
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*558
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 4.925428899845812)
}


sp {rl*mario*rl*557
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*556
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.1182354530979104)
}


sp {rl*mario*rl*555
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2977947142801239)
}


sp {rl*mario*rl*554
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2940000000670552)
}


sp {rl*mario*rl*553
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 3 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*552
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.536825229343046)
}


sp {rl*mario*rl*551
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*550
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*549
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.05718052300065794)
}


sp {rl*mario*rl*548
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.910962819834755)
}


sp {rl*mario*rl*547
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*546
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*545
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*544
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*543
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.093473532674214)
}


sp {rl*mario*rl*542
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*541
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*540
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.642228663735898)
}


sp {rl*mario*rl*539
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*538
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.975885386484388)
}


sp {rl*mario*rl*537
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.01513377750943215)
}


sp {rl*mario*rl*536
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*535
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.378526439685038)
}


sp {rl*mario*rl*534
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.661982032234762)
}


sp {rl*mario*rl*533
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.444213191498422)
}


sp {rl*mario*rl*532
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 4.138275815643388)
}


sp {rl*mario*rl*531
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.218679892678553)
}


sp {rl*mario*rl*530
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.051846751661946)
}


sp {rl*mario*rl*529
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.632916411001028)
}


sp {rl*mario*rl*528
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -1.484913210246786)
}


sp {rl*mario*rl*527
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.345487366959073)
}


sp {rl*mario*rl*526
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.01097460654148175)
}


sp {rl*mario*rl*525
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.7062052515631518)
}


sp {rl*mario*rl*524
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2479198363448166)
}


sp {rl*mario*rl*523
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.2280525339226466)
}


sp {rl*mario*rl*522
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -1.45812770660583)
}


sp {rl*mario*rl*521
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.199558399591833)
}


sp {rl*mario*rl*520
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.622299494092847)
}


sp {rl*mario*rl*519
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.08429859877029347)
}


sp {rl*mario*rl*518
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.3692832111203807)
}


sp {rl*mario*rl*517
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.456982865191241)
}


sp {rl*mario*rl*516
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.5706809438981189)
}


sp {rl*mario*rl*515
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.293955102096905)
}


sp {rl*mario*rl*514
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.693833560459285)
}


sp {rl*mario*rl*513
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 4.046112219344181)
}


sp {rl*mario*rl*512
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.204796495589755)
}


sp {rl*mario*rl*511
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.831934635758639)
}


sp {rl*mario*rl*510
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.858417840255036)
}


sp {rl*mario*rl*509
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*508
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*507
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.2467565691506897)
}


sp {rl*mario*rl*506
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*505
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*504
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.1003929249150527)
}


sp {rl*mario*rl*503
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 4.823294106038647)
}


sp {rl*mario*rl*502
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2646196048276344)
}


sp {rl*mario*rl*501
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.6045357249852231)
}


sp {rl*mario*rl*500
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*499
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*498
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.0338309560293597)
}


sp {rl*mario*rl*497
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.122979045402091)
}


sp {rl*mario*rl*496
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.6378459415256712)
}


sp {rl*mario*rl*495
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.269973800748428)
}


sp {rl*mario*rl*494
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.9072271668148728)
}


sp {rl*mario*rl*493
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -2 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.073258866356214)
}


sp {rl*mario*rl*492
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.619510746391936)
}


sp {rl*mario*rl*491
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 4.129688950787539)
}


sp {rl*mario*rl*490
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.454614717676373)
}


sp {rl*mario*rl*489
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.127497284720783)
}


sp {rl*mario*rl*488
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.070675054293883)
}


sp {rl*mario*rl*487
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.249649385877682)
}


sp {rl*mario*rl*486
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*485
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*484
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*483
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.999994642792321)
}


sp {rl*mario*rl*482
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*481
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.426499831505387)
}


sp {rl*mario*rl*480
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.824283733726106)
}


sp {rl*mario*rl*479
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*478
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*477
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*476
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*475
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*474
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.01313999985314905)
}


sp {rl*mario*rl*473
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.570667461995766)
}


sp {rl*mario*rl*472
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.977276011714701)
}


sp {rl*mario*rl*471
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.724287761821967)
}


sp {rl*mario*rl*470
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.908973999318544)
}


sp {rl*mario*rl*469
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.372141861379503)
}


sp {rl*mario*rl*468
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*467
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.391061486968737)
}


sp {rl*mario*rl*466
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.720995741747271)
}


sp {rl*mario*rl*465
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.717170380444129)
}


sp {rl*mario*rl*464
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6851797369470222)
}


sp {rl*mario*rl*463
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.375710203952969)
}


sp {rl*mario*rl*462
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.169537096976317)
}


sp {rl*mario*rl*461
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.632284401968381)
}


sp {rl*mario*rl*460
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.711097004846943)
}


sp {rl*mario*rl*459
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.369710985429564)
}


sp {rl*mario*rl*458
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.946362318496694)
}


sp {rl*mario*rl*457
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.786933770915886)
}


sp {rl*mario*rl*456
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.618913073436928)
}


sp {rl*mario*rl*455
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.452831884367767)
}


sp {rl*mario*rl*454
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.64257170914235)
}


sp {rl*mario*rl*453
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.052999723944456)
}


sp {rl*mario*rl*452
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.678439294172374)
}


sp {rl*mario*rl*451
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.470997634169486)
}


sp {rl*mario*rl*450
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.893214267454424)
}


sp {rl*mario*rl*449
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.103992076408106)
}


sp {rl*mario*rl*448
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.002999999932944775)
}


sp {rl*mario*rl*447
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.070075050165527)
}


sp {rl*mario*rl*446
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.888532708594375)
}


sp {rl*mario*rl*445
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.378466227167243)
}


sp {rl*mario*rl*444
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.903987854249716)
}


sp {rl*mario*rl*443
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.674925535659418)
}


sp {rl*mario*rl*442
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.738952649531234)
}


sp {rl*mario*rl*441
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.080325460861929)
}


sp {rl*mario*rl*440
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.341423291563114)
}


sp {rl*mario*rl*439
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.781459623766065)
}


sp {rl*mario*rl*438
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.373782288110495)
}


sp {rl*mario*rl*437
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*436
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.485114675810071)
}


sp {rl*mario*rl*435
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2615409425220918)
}


sp {rl*mario*rl*434
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.314838856693632)
}


sp {rl*mario*rl*433
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*432
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.417275409829006)
}


sp {rl*mario*rl*431
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*430
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.019939645770842)
}


sp {rl*mario*rl*429
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.591703602956946)
}


sp {rl*mario*rl*428
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6004070821536011)
}


sp {rl*mario*rl*427
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*426
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.225194248947881)
}


sp {rl*mario*rl*425
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.227973467889398)
}


sp {rl*mario*rl*424
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.726502411447984)
}


sp {rl*mario*rl*423
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.5951720413950974)
}


sp {rl*mario*rl*422
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.107228879812126)
}


sp {rl*mario*rl*421
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.722342874638369)
}


sp {rl*mario*rl*420
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.2751800057868961)
}


sp {rl*mario*rl*419
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.870254613680189)
}


sp {rl*mario*rl*418
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.797645453048316)
}


sp {rl*mario*rl*417
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.87378620737251)
}


sp {rl*mario*rl*416
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.205600971495524)
}


sp {rl*mario*rl*415
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*414
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.447954359025573)
}


sp {rl*mario*rl*413
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.421997820459008)
}


sp {rl*mario*rl*412
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.450699877378168)
}


sp {rl*mario*rl*411
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.485846463308969)
}


sp {rl*mario*rl*410
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.746491405893351)
}


sp {rl*mario*rl*409
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.100560450672988)
}


sp {rl*mario*rl*408
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.422335270556883)
}


sp {rl*mario*rl*407
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.880475364097578)
}


sp {rl*mario*rl*406
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9712928447111817)
}


sp {rl*mario*rl*405
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.551280413329733)
}


sp {rl*mario*rl*404
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2614758209825115)
}


sp {rl*mario*rl*403
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.612656036490953)
}


sp {rl*mario*rl*402
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.583440163009584)
}


sp {rl*mario*rl*401
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.757152795730627)
}


sp {rl*mario*rl*400
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 5.415028427184103)
}


sp {rl*mario*rl*399
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.732225141238624)
}


sp {rl*mario*rl*398
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.782012634261529)
}


sp {rl*mario*rl*397
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.255735628463562)
}


sp {rl*mario*rl*396
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.647451168931025)
}


sp {rl*mario*rl*395
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.726344184955232)
}


sp {rl*mario*rl*394
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 4.361350690258403)
}


sp {rl*mario*rl*393
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.619281035035914)
}


sp {rl*mario*rl*392
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.927963202863143)
}


sp {rl*mario*rl*391
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.565302304142083)
}


sp {rl*mario*rl*390
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*389
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*388
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.377806112996485)
}


sp {rl*mario*rl*387
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 4.041937652898979)
}


sp {rl*mario*rl*386
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*385
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*384
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.942753293605315)
}


sp {rl*mario*rl*383
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*382
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*381
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*380
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*379
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*378
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.553576694414769)
}


sp {rl*mario*rl*377
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*376
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*375
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.3029999999329447)
}


sp {rl*mario*rl*374
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*373
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2940000000670552)
}


sp {rl*mario*rl*372
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6960221558835116)
}


sp {rl*mario*rl*371
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*370
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*369
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.3029999999329447)
}


sp {rl*mario*rl*368
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*367
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*366
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.521176498533701)
}


sp {rl*mario*rl*365
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.4007184075779457)
}


sp {rl*mario*rl*364
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.83796372761512)
}


sp {rl*mario*rl*363
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.3029999999329447)
}


sp {rl*mario*rl*362
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.50338511464189)
}


sp {rl*mario*rl*361
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.22765316348664)
}


sp {rl*mario*rl*360
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.038584460615655)
}


sp {rl*mario*rl*359
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.636829471881426)
}


sp {rl*mario*rl*358
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.269355218706387)
}


sp {rl*mario*rl*357
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.161296022281989)
}


sp {rl*mario*rl*356
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.887627846625675)
}


sp {rl*mario*rl*355
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.881378104319845)
}


sp {rl*mario*rl*354
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.724928549205182)
}


sp {rl*mario*rl*353
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.256067973144607)
}


sp {rl*mario*rl*352
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.356923539643532)
}


sp {rl*mario*rl*351
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.124377544329779)
}


sp {rl*mario*rl*350
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.18440598368346)
}


sp {rl*mario*rl*349
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.469035319128908)
}


sp {rl*mario*rl*348
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.4692088405093985)
}


sp {rl*mario*rl*347
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9985487710184549)
}


sp {rl*mario*rl*346
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.296240392462984)
}


sp {rl*mario*rl*345
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.3776313403358657)
}


sp {rl*mario*rl*344
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.77374266863454)
}


sp {rl*mario*rl*343
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.671354768929409)
}


sp {rl*mario*rl*342
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.575935672889597)
}


sp {rl*mario*rl*341
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.7273932075096872)
}


sp {rl*mario*rl*340
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*339
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.4985827934676126)
}


sp {rl*mario*rl*338
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.059003558551127)
}


sp {rl*mario*rl*337
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.133696221905919)
}


sp {rl*mario*rl*336
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.788766089625425)
}


sp {rl*mario*rl*335
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.063265649895667)
}


sp {rl*mario*rl*334
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.348205524702855)
}


sp {rl*mario*rl*333
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.5463760002711123)
}


sp {rl*mario*rl*332
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.409821213459729)
}


sp {rl*mario*rl*331
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.752060116199456)
}


sp {rl*mario*rl*330
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6647516485479478)
}


sp {rl*mario*rl*329
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.11917033237501)
}


sp {rl*mario*rl*328
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.736640208288375)
}


sp {rl*mario*rl*327
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.726809519817305)
}


sp {rl*mario*rl*326
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.7629158796116937)
}


sp {rl*mario*rl*325
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.243913123500162)
}


sp {rl*mario*rl*324
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.3071999998860061)
}


sp {rl*mario*rl*323
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8339302097168828)
}


sp {rl*mario*rl*322
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.029652615744591)
}


sp {rl*mario*rl*321
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.203788140350422)
}


sp {rl*mario*rl*320
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2964668759385826)
}


sp {rl*mario*rl*319
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*318
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.454402692166226)
}


sp {rl*mario*rl*317
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.02011841057405)
}


sp {rl*mario*rl*316
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.076268708776944)
}


sp {rl*mario*rl*315
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.972483284854332)
}


sp {rl*mario*rl*314
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.484508923346161)
}


sp {rl*mario*rl*313
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.426956275166928)
}


sp {rl*mario*rl*312
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.484954655620471)
}


sp {rl*mario*rl*311
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.339014044459405)
}


sp {rl*mario*rl*310
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.892235333809659)
}


sp {rl*mario*rl*309
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.113120542334841)
}


sp {rl*mario*rl*308
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.542890542889673)
}


sp {rl*mario*rl*307
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.269295616941617)
}


sp {rl*mario*rl*306
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.16783169273117)
}


sp {rl*mario*rl*305
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.731862333596365)
}


sp {rl*mario*rl*304
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6620097685526899)
}


sp {rl*mario*rl*303
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9210177211264042)
}


sp {rl*mario*rl*302
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.890510995474067)
}


sp {rl*mario*rl*301
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.833146202099076)
}


sp {rl*mario*rl*300
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.664322202246381)
}


sp {rl*mario*rl*299
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.902694367654023)
}


sp {rl*mario*rl*298
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.165418760857304)
}


sp {rl*mario*rl*297
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.3250118997672091)
}


sp {rl*mario*rl*296
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.361122020754066)
}


sp {rl*mario*rl*295
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.096280819152315)
}


sp {rl*mario*rl*294
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6501073582760908)
}


sp {rl*mario*rl*293
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.49555996785298)
}


sp {rl*mario*rl*292
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.178952501393883)
}


sp {rl*mario*rl*291
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.943325003222728)
}


sp {rl*mario*rl*290
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.155791383656043)
}


sp {rl*mario*rl*289
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.00645702378683)
}


sp {rl*mario*rl*288
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.599683664827166)
}


sp {rl*mario*rl*287
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.859346295483564)
}


sp {rl*mario*rl*286
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8412119335984851)
}


sp {rl*mario*rl*285
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.140805223270069)
}


sp {rl*mario*rl*284
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.672670228013846)
}


sp {rl*mario*rl*283
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.77624268647905)
}


sp {rl*mario*rl*282
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.681311442208335)
}


sp {rl*mario*rl*281
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.717157408594632)
}


sp {rl*mario*rl*280
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 4.152956140642105)
}


sp {rl*mario*rl*279
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.1937324159341003)
}


sp {rl*mario*rl*278
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.351184315704451)
}


sp {rl*mario*rl*277
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.15308955073619)
}


sp {rl*mario*rl*276
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.2568304925823242)
}


sp {rl*mario*rl*275
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.594995461172603)
}


sp {rl*mario*rl*274
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.036120011607206)
}


sp {rl*mario*rl*273
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.554939152910828)
}


sp {rl*mario*rl*272
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*271
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y -1 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.460562791349319)
}


sp {rl*mario*rl*270
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.296562305839341)
}


sp {rl*mario*rl*269
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*268
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.537869469250321)
}


sp {rl*mario*rl*267
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.193635486564708)
}


sp {rl*mario*rl*266
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*265
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.3503336302103153)
}


sp {rl*mario*rl*264
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.136528753971308)
}


sp {rl*mario*rl*263
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*262
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*261
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.05850972939770088)
}


sp {rl*mario*rl*260
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.5845891123304018)
}


sp {rl*mario*rl*259
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 4 ^x -4 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.973744277521754)
}


sp {rl*mario*rl*258
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.718844711649771)
}


sp {rl*mario*rl*257
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.38561450412268)
}


sp {rl*mario*rl*256
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.517339490032352)
}


sp {rl*mario*rl*255
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.3617650852365746)
}


sp {rl*mario*rl*254
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.1911758300658948)
}


sp {rl*mario*rl*253
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -3 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.873289279874784)
}


sp {rl*mario*rl*252
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.7216596821833772)
}


sp {rl*mario*rl*251
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.11127246390467)
}


sp {rl*mario*rl*250
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.8365667420974452)
}


sp {rl*mario*rl*249
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.4172689456188574)
}


sp {rl*mario*rl*248
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.9637452439821274)
}


sp {rl*mario*rl*247
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection right ^y 3 ^x -1 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 1.411223537212228)
}


sp {rl*mario*rl*246
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.871381950690417)
}


sp {rl*mario*rl*245
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.836217412533513)
}


sp {rl*mario*rl*244
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.255629444568886)
}


sp {rl*mario*rl*243
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.010908320542701)
}


sp {rl*mario*rl*242
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.204123388473373)
}


sp {rl*mario*rl*241
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.524102505961733)
}


sp {rl*mario*rl*240
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.432386338979673)
}


sp {rl*mario*rl*239
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.600656841801964)
}


sp {rl*mario*rl*238
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6737354200634164)
}


sp {rl*mario*rl*237
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.933665655837872)
}


sp {rl*mario*rl*236
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.267411016956275)
}


sp {rl*mario*rl*235
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.328383202903711)
}


sp {rl*mario*rl*234
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 4.371664674175889)
}


sp {rl*mario*rl*233
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.1698576071298187)
}


sp {rl*mario*rl*232
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.7180091938748152)
}


sp {rl*mario*rl*231
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.899394827197025)
}


sp {rl*mario*rl*230
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.010838969096327)
}


sp {rl*mario*rl*229
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 0 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.783056420311978)
}


sp {rl*mario*rl*228
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.934127827285768)
}


sp {rl*mario*rl*227
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.071142881471508)
}


sp {rl*mario*rl*226
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.7605722099056)
}


sp {rl*mario*rl*225
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.307736994648783)
}


sp {rl*mario*rl*224
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.273214184922399)
}


sp {rl*mario*rl*223
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.197684137993692)
}


sp {rl*mario*rl*222
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.454698795422504)
}


sp {rl*mario*rl*221
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.32025986626748)
}


sp {rl*mario*rl*220
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.788852737070993)
}


sp {rl*mario*rl*219
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.4609936317500291)
}


sp {rl*mario*rl*218
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.055197257310154)
}


sp {rl*mario*rl*217
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.420427145132133)
}


sp {rl*mario*rl*216
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.941984523143816)
}


sp {rl*mario*rl*215
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.163566372945219)
}


sp {rl*mario*rl*214
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.884426135719417)
}


sp {rl*mario*rl*213
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.848367226354471)
}


sp {rl*mario*rl*212
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.019621998936785)
}


sp {rl*mario*rl*211
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.063105176410499)
}


sp {rl*mario*rl*210
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.341187662997788)
}


sp {rl*mario*rl*209
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.952077028972238)
}


sp {rl*mario*rl*208
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 5.017718335941741)
}


sp {rl*mario*rl*207
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.151668157272123)
}


sp {rl*mario*rl*206
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.375322459656378)
}


sp {rl*mario*rl*205
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.224535157979836)
}


sp {rl*mario*rl*204
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.470184215264431)
}


sp {rl*mario*rl*203
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.432019547470674)
}


sp {rl*mario*rl*202
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.912590049317122)
}


sp {rl*mario*rl*201
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9143497573559616)
}


sp {rl*mario*rl*200
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.410205179530624)
}


sp {rl*mario*rl*199
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.832272049162208)
}


sp {rl*mario*rl*198
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.252388164037138)
}


sp {rl*mario*rl*197
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.893630331951668)
}


sp {rl*mario*rl*196
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.962414353531215)
}


sp {rl*mario*rl*195
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.451199984516289)
}


sp {rl*mario*rl*194
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.03572562979537)
}


sp {rl*mario*rl*193
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.668952897064447)
}


sp {rl*mario*rl*192
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.287972757502222)
}


sp {rl*mario*rl*191
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.323000757330973)
}


sp {rl*mario*rl*190
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.388159706054053)
}


sp {rl*mario*rl*189
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.316831373185019)
}


sp {rl*mario*rl*188
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.981914009522889)
}


sp {rl*mario*rl*187
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.801702255460385)
}


sp {rl*mario*rl*186
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.530712572732128)
}


sp {rl*mario*rl*185
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.207351270610461)
}


sp {rl*mario*rl*184
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.556963140618877)
}


sp {rl*mario*rl*183
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.075792068013268)
}


sp {rl*mario*rl*182
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.316723810759637)
}


sp {rl*mario*rl*181
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y -1 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 4.562310164785571)
}


sp {rl*mario*rl*180
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.3756109888772695)
}


sp {rl*mario*rl*179
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9317848062792543)
}


sp {rl*mario*rl*178
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.7117978135374261)
}


sp {rl*mario*rl*177
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.954178106535334)
}


sp {rl*mario*rl*176
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*175
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.881602045590812)
}


sp {rl*mario*rl*174
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 4.064339746137859)
}


sp {rl*mario*rl*173
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.820337900393547)
}


sp {rl*mario*rl*172
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.757641458189654)
}


sp {rl*mario*rl*171
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.650292391833809)
}


sp {rl*mario*rl*170
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.14120927621423)
}


sp {rl*mario*rl*169
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -2 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.426174935237012)
}


sp {rl*mario*rl*168
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6709798938410227)
}


sp {rl*mario*rl*167
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2665365905887244)
}


sp {rl*mario*rl*166
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.79802960970567)
}


sp {rl*mario*rl*165
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.429780210847981)
}


sp {rl*mario*rl*164
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.02627881699197)
}


sp {rl*mario*rl*163
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.438152268343095)
}


sp {rl*mario*rl*162
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.780049651819466)
}


sp {rl*mario*rl*161
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.415081197143098)
}


sp {rl*mario*rl*160
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.779477751761349)
}


sp {rl*mario*rl*159
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8650298483954295)
}


sp {rl*mario*rl*158
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.332195211543022)
}


sp {rl*mario*rl*157
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.454190946281083)
}


sp {rl*mario*rl*156
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.275452681110134)
}


sp {rl*mario*rl*155
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.549591822077777)
}


sp {rl*mario*rl*154
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.93314705772341)
}


sp {rl*mario*rl*153
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.185763355429637)
}


sp {rl*mario*rl*152
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.218748435877393)
}


sp {rl*mario*rl*151
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.229397797814401)
}


sp {rl*mario*rl*150
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.245173230805606)
}


sp {rl*mario*rl*149
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.001719386121065)
}


sp {rl*mario*rl*148
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.746769649512161)
}


sp {rl*mario*rl*147
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.670149671923953)
}


sp {rl*mario*rl*146
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.596731869968624)
}


sp {rl*mario*rl*145
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.488549756957068)
}


sp {rl*mario*rl*144
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.3029999999329447)
}


sp {rl*mario*rl*143
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.288159202930319)
}


sp {rl*mario*rl*142
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*141
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8187659290624116)
}


sp {rl*mario*rl*140
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*139
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.3224427922339744)
}


sp {rl*mario*rl*138
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.042383875184874)
}


sp {rl*mario*rl*137
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*136
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8067497543977268)
}


sp {rl*mario*rl*135
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.005999999932944777)
}


sp {rl*mario*rl*134
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*133
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*132
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.178086064646887)
}


sp {rl*mario*rl*131
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.474309406570933)
}


sp {rl*mario*rl*130
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.052655486447656)
}


sp {rl*mario*rl*129
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.868924431066233)
}


sp {rl*mario*rl*128
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.806583082727087)
}


sp {rl*mario*rl*127
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.953612979874744)
}


sp {rl*mario*rl*126
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.049453929519674)
}


sp {rl*mario*rl*125
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.715902470080786)
}


sp {rl*mario*rl*124
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.602418677002001)
}


sp {rl*mario*rl*123
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9484401667331508)
}


sp {rl*mario*rl*122
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.925018780666096)
}


sp {rl*mario*rl*121
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 7 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.902821828030363)
}


sp {rl*mario*rl*120
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.414846524316269)
}


sp {rl*mario*rl*119
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.6545181405049)
}


sp {rl*mario*rl*118
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.91112097722515)
}


sp {rl*mario*rl*117
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.096546223359537)
}


sp {rl*mario*rl*116
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.001611990971302)
}


sp {rl*mario*rl*115
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.64062226951934)
}


sp {rl*mario*rl*114
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.389021932730046)
}


sp {rl*mario*rl*113
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.228475439814851)
}


sp {rl*mario*rl*112
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.259306627480992)
}


sp {rl*mario*rl*111
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.672539319952963)
}


sp {rl*mario*rl*110
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.708265051020406)
}


sp {rl*mario*rl*109
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 4 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.494815678476209)
}


sp {rl*mario*rl*108
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.926439865489308)
}


sp {rl*mario*rl*107
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.423467923732242)
}


sp {rl*mario*rl*106
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.125617433288713)
}


sp {rl*mario*rl*105
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.2696093431971344)
}


sp {rl*mario*rl*104
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.372839436381788)
}


sp {rl*mario*rl*103
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 2 ^x 5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.431916577078191)
}


sp {rl*mario*rl*102
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.704339418776767)
}


sp {rl*mario*rl*101
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*100
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.139744735105289)
}


sp {rl*mario*rl*99
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.5306403677748283)
}


sp {rl*mario*rl*98
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.516693818115573)
}


sp {rl*mario*rl*97
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -5 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*96
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.748969569246062)
}


sp {rl*mario*rl*95
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.837216510351736)
}


sp {rl*mario*rl*94
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.601619415862453)
}


sp {rl*mario*rl*93
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.681124788018386)
}


sp {rl*mario*rl*92
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.228120021558312)
}


sp {rl*mario*rl*91
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 0 ^x -3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.519074180777977)
}


sp {rl*mario*rl*90
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.209709569611517)
}


sp {rl*mario*rl*89
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.8416061346873717)
}


sp {rl*mario*rl*88
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.6311586324075182)
}


sp {rl*mario*rl*87
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = -0.009902579889330044)
}


sp {rl*mario*rl*86
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.125422900722135)
}


sp {rl*mario*rl*85
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 1 ^x -1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.143552254416375)
}


sp {rl*mario*rl*84
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.034109288557526)
}


sp {rl*mario*rl*83
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.71703948873798)
}


sp {rl*mario*rl*82
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.428899984110462)
}


sp {rl*mario*rl*81
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.1400800204925612)
}


sp {rl*mario*rl*80
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.095401054699193)
}


sp {rl*mario*rl*79
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 0 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.894327080011969)
}


sp {rl*mario*rl*78
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.127618180032896)
}


sp {rl*mario*rl*77
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.615096855162992)
}


sp {rl*mario*rl*76
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.237035795143403)
}


sp {rl*mario*rl*75
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.756115589863233)
}


sp {rl*mario*rl*74
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.122763590053162)
}


sp {rl*mario*rl*73
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 1 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.005739387631041)
}


sp {rl*mario*rl*72
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.92433189793306)
}


sp {rl*mario*rl*71
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.938494576415251)
}


sp {rl*mario*rl*70
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.729798997258682)
}


sp {rl*mario*rl*69
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.5564283288434052)
}


sp {rl*mario*rl*68
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.749174291304935)
}


sp {rl*mario*rl*67
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 4 ^x 3 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.93835767580936)
}


sp {rl*mario*rl*66
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.951329865771479)
}


sp {rl*mario*rl*65
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.289430277751578)
}


sp {rl*mario*rl*64
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.814501672093703)
}


sp {rl*mario*rl*63
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9967433586885246)
}


sp {rl*mario*rl*62
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.35292984914887)
}


sp {rl*mario*rl*61
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 6 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 3.661791047661637)
}


sp {rl*mario*rl*60
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.568595952739432)
}


sp {rl*mario*rl*59
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.034479028090983)
}


sp {rl*mario*rl*58
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.125595134317113)
}


sp {rl*mario*rl*57
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 0.9970937432516784)
}


sp {rl*mario*rl*56
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 2.383080068737992)
}


sp {rl*mario*rl*55
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection left ^y 3 ^x 8 ^type |Goomba|)
    -->
    (<s1> ^operator <o1> = 1.449597034076209)
}


sp {rl*mario*rl*54
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*53
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*52
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*51
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 5.728852217569836)
}


sp {rl*mario*rl*50
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*49
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -8 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*48
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 4.975488314730425)
}


sp {rl*mario*rl*47
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.039139388091454)
}


sp {rl*mario*rl*46
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*45
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.3029999999329447)
}


sp {rl*mario*rl*44
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.6239306659037538)
}


sp {rl*mario*rl*43
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -7 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.9176437455301758)
}


sp {rl*mario*rl*42
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = -0.1729202430433851)
}


sp {rl*mario*rl*41
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.0404981004993847)
}


sp {rl*mario*rl*40
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.542536071029512)
}


sp {rl*mario*rl*39
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 3.497950014863262)
}


sp {rl*mario*rl*38
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump no ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*37
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump no ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 2 ^x -6 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0)
}


sp {rl*mario*rl*36
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump yes ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.7252419134376606)
}


sp {rl*mario*rl*35
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction left)
    (<o1> ^jump yes ^move left ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 0.7479150171634823)
}


sp {rl*mario*rl*34
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 0 ^direction nil)
    (<o1> ^jump yes ^move nil ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 2.116389848904312)
}


sp {rl*mario*rl*33
    (state <s1> ^move <m1> ^operator <o1> + ^io <i1>)
    (<m1> ^initial 1 ^direction right)
    (<o1> ^jump no ^move right ^name action)
    (<i1> ^input-link <i2>)
    (<i2> ^monster <m2>)
    (<m2> ^xdirection null ^y 1 ^x -5 ^type |Mushroom|)
    -->
    (<s1> ^operator <o1> = 4.075071566780015)
}


sp {rl*mario*rl*32
    (state <s1> ^move <m1> ^operator <o1